/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EncryptEvaluation,
  EncryptEvaluationInterface,
} from "../../contracts/EncryptEvaluation";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_queryFeeWei",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "CidUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "QueryFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "RecordUploaded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "perUser",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usersCount",
        type: "uint256",
      },
    ],
    name: "RewardsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "getMyRecord",
    outputs: [
      {
        internalType: "euint32",
        name: "score",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "contribution",
        type: "bytes32",
      },
      {
        internalType: "euint16",
        name: "grade",
        type: "bytes32",
      },
      {
        internalType: "ebool",
        name: "passed",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserRecord",
    outputs: [
      {
        internalType: "euint32",
        name: "score",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "contribution",
        type: "bytes32",
      },
      {
        internalType: "euint16",
        name: "grade",
        type: "bytes32",
      },
      {
        internalType: "ebool",
        name: "passed",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
    ],
    name: "grantAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "thresholdEnc",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "isAvgScoreAtLeast",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "scoreThresholdEnc",
        type: "bytes32",
      },
      {
        internalType: "externalEuint32",
        name: "contributionThresholdEnc",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "isEligible",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "queryFeeWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "thresholdEnc",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "queryScoreStats",
    outputs: [
      {
        internalType: "euint32",
        name: "matchedCount",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "sumScore",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setQueryFeeWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "scoreEnc",
        type: "bytes32",
      },
      {
        internalType: "externalEuint32",
        name: "contributionEnc",
        type: "bytes32",
      },
      {
        internalType: "externalEuint16",
        name: "gradeEnc",
        type: "bytes32",
      },
      {
        internalType: "externalEbool",
        name: "passedEnc",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "upload",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawProtocolFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b50604051611e7c380380611e7c83398101604081905261002e916101b4565b6101a86100cc604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf69602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b336080526003556101cb565b5f602082840312156101c4575f5ffd5b5051919050565b608051611c8b6101f15f395f81816102c90152818161040801526108300152611c8b5ff3fe608060405260043610610109575f3560e01c80636ba13a82116100a15780638da5cb5b11610071578063d592f80411610057578063d592f80414610317578063da1f12ab1461032c578063e8d16dfd14610340575f5ffd5b80638da5cb5b146102b8578063c7b8981c14610303575f5ffd5b80636ba13a82146102315780636db7cda3146102455780637ceb64591461026d5780638023c8a31461028c575f5ffd5b80632fc291b6116100dc5780632fc291b61461019457806331d7a262146101b357806350d87c4d146101de57806367e2efc614610212575f5ffd5b80630ae5e7391461010d5780631a7a73c21461012e5780631ad8b03b1461014d57806324a23f3f14610175575b5f5ffd5b348015610118575f5ffd5b5061012c610127366004611747565b61035f565b005b348015610139575f5ffd5b5061012c610148366004611762565b6103fd565b348015610158575f5ffd5b5061016260045481565b6040519081526020015b60405180910390f35b348015610180575f5ffd5b5061012c61018f3660046117d1565b610559565b34801561019f575f5ffd5b5061012c6101ae366004611865565b610825565b3480156101be575f5ffd5b506101626101cd366004611747565b60056020525f908152604090205481565b3480156101e9575f5ffd5b506101f26108c4565b60408051948552602085019390935291830152606082015260800161016c565b34801561021d575f5ffd5b506101f261022c366004611747565b610939565b34801561023c575f5ffd5b50600254610162565b61025861025336600461187c565b6109b8565b6040805192835260208301919091520161016c565b348015610278575f5ffd5b5061016261028736600461187c565b610c6b565b348015610297575f5ffd5b506102ab6102a6366004611747565b610dc1565b60405161016c91906118f2565b3480156102c3575f5ffd5b506102eb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161016c565b34801561030e575f5ffd5b5061012c610e6a565b348015610322575f5ffd5b5061016260035481565b348015610337575f5ffd5b50612711610162565b34801561034b575f5ffd5b5061016261035a366004611904565b610f95565b335f9081526020819052604090206004015460ff166103b15760405162461bcd60e51b81526020600482015260096024820152681b9bc81c9958dbdc9960ba1b60448201526064015b60405180910390fd5b335f90815260208190526040902080546103cb90836110c5565b506103da8160010154836110c5565b506103e98160020154836110c5565b506103f88160030154836110c5565b505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104615760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016103a8565b6004548111156104b35760405162461bcd60e51b815260206004820152600760248201527f657863656564730000000000000000000000000000000000000000000000000060448201526064016103a8565b8060045f8282546104c49190611967565b90915550506040515f906001600160a01b0384169083908381818185875af1925050503d805f8114610511576040519150601f19603f3d011682016040523d82523d5f602084013e610516565b606091505b50509050806103f85760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016103a8565b5f6105998986868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110d992505050565b90505f6105db8987878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110d992505050565b90505f61061d8988888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110e692505050565b90505f61065f8989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110f392505050565b335f90815260208190526040902060048101549192509060ff166106e75760028054600181810183555f929092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905560048201805460ff191690911790555b848155600181018490556002810183905560038101829055610708856110ff565b5061071681600101546110ff565b5061072481600201546110ff565b5061073281600301546110ff565b50805461073f90336110c5565b5061074e8160010154336110c5565b5061075d8160020154336110c5565b5061076c8160030154336110c5565b5085156107d157335f90815260016020526040902061078c878983611a11565b50336001600160a01b03167f1205a07b7ba0cbf4e26a970291264be95386397781e2cc995c67166e3083aa2088886040516107c8929190611acb565b60405180910390a25b335f818152600160205260409081902090517f01b64c1967d10407b4ff97725353edea760930f8e25d265e786a16eecbe4d7f79161080e91611af9565b60405180910390a250505050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108895760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016103a8565b60038190556040518181527f117108dd902cd46170ba123a341ab5b32cff70f5e48d63a6d758960bb8ba72449060200160405180910390a150565b335f90815260208190526040812060048101548291829182919060ff166109195760405162461bcd60e51b81526020600482015260096024820152681b9bc81c9958dbdc9960ba1b60448201526064016103a8565b805460018201546002830154600390930154919790965091945092509050565b6001600160a01b0381165f90815260208190526040812060048101548291829182919060ff166109975760405162461bcd60e51b81526020600482015260096024820152681b9bc81c9958dbdc9960ba1b60448201526064016103a8565b80546001820154600283015460039093015491989097509195509350915050565b6002545f9081906109f55760405162461bcd60e51b81526020600482015260076024820152666e6f206461746160c81b60448201526064016103a8565b60035415610b2757600354341015610a355760405162461bcd60e51b815260206004820152600360248201526266656560e81b60448201526064016103a8565b6002545f8115610a455781610a48565b60015b610a529034611b80565b90505f5b82811015610ab5578160055f60028481548110610a7557610a75611b9f565b5f9182526020808320909101546001600160a01b0316835282019290925260400181208054909190610aa8908490611bb3565b9091555050600101610a56565b505f610ac18383611bc6565b9050610acd8134611967565b60045f828254610add9190611bb3565b909155505060408051348152602081018490529081018490527fbff8d5ced955e6f69a19ecc71d313996f6ddfed652cdb458859af89e2f0768359060600160405180910390a15050505b5f610b678686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110d992505050565b90505f610b735f61110e565b90505f610b7f5f61110e565b90505f5b600254811015610c34575f5f5f60028481548110610ba357610ba3611b9f565b5f9182526020808320909101546001600160a01b031683528201929092526040019020600481015490915060ff16610bdb5750610c2c565b5f610be9825f015487611120565b9050610c0a85610c0583855f0154610c005f61110e565b61114e565b611162565b9450610c2784610c0583610c1e600161110e565b610c005f61110e565b935050505b600101610b83565b50610c3e826110ff565b50610c48816110ff565b50610c5382336110c5565b50610c5e81336110c5565b5097909650945050505050565b6002545f90610ca65760405162461bcd60e51b81526020600482015260076024820152666e6f206461746160c81b60448201526064016103a8565b5f610ce68585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110d992505050565b90505f610cf25f61110e565b90505f610cfe5f61110e565b90505f5b600254811015610d83575f5f5f60028481548110610d2257610d22611b9f565b5f9182526020808320909101546001600160a01b031683528201929092526040019020600481015490915060ff16610d5a5750610d7b565b610d6784825f0154611162565b9350610d7783610c05600161110e565b9250505b600101610d02565b505f610d8f8285611190565b90505f610d9c8483611120565b9050610da7816110ff565b50610db281336110c5565b509450505050505b9392505050565b6001600160a01b0381165f908152600160205260409020805460609190610de79061198e565b80601f0160208091040260200160405190810160405280929190818152602001828054610e139061198e565b8015610e5e5780601f10610e3557610100808354040283529160200191610e5e565b820191905f5260205f20905b815481529060010190602001808311610e4157829003601f168201915b50505050509050919050565b335f9081526005602052604090205480610ec65760405162461bcd60e51b815260206004820152600a60248201527f6e6f20726577617264730000000000000000000000000000000000000000000060448201526064016103a8565b335f818152600560205260408082208290555190919083908381818185875af1925050503d805f8114610f14576040519150601f19603f3d011682016040523d82523d5f602084013e610f19565b606091505b5050905080610f5c5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016103a8565b60405182815233907f8a43c4352486ec339f487f64af78ca5cbf06cd47833f073d3baf3a193e5031619060200160405180910390a25050565b335f9081526020819052604081206004015460ff16610fe25760405162461bcd60e51b81526020600482015260096024820152681b9bc81c9958dbdc9960ba1b60448201526064016103a8565b5f6110228685858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110d992505050565b90505f6110648686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110d992505050565b335f9081526020819052604081208054929350916110829085611120565b90505f611093836001015485611120565b90505f6110a083836111be565b90506110ab816110ff565b506110b681336110c5565b509a9950505050505050505050565b5f6110d083836111ec565b50815b92915050565b5f610dba83836004611262565b5f610dba83836003611262565b5f610dba83835f611262565b5f61110a82306111ec565b5090565b5f6110d38263ffffffff16600461136f565b5f826111325761112f5f61110e565b92505b81611143576111405f61110e565b91505b610dba83835f611411565b5f61115a8484846114e1565b949350505050565b5f82611174576111715f61110e565b92505b81611185576111825f61110e565b91505b610dba83835f611577565b5f826111a25761119f5f61110e565b92505b816111b3576111b05f61110e565b91505b610dba83835f611601565b5f826111d0576111cd5f61168b565b92505b816111e1576111de5f61168b565b91505b610dba83835f6116a6565b5f5f516020611c5f5f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015611247575f5ffd5b505af1158015611259573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f915f516020611c5f5f395f51905f52916001600160a01b039091169063196d0b9b906112c8908890339089908990600401611bfd565b6020604051808303815f875af11580156112e4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113089190611c33565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611351575f5ffd5b505af1158015611363573d5f5f3e3d5ffd5b50505050509392505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f915f516020611c5f5f395f51905f52916001600160a01b0390911690639cd07acb906113d19087908790600401611c4a565b6020604051808303815f875af11580156113ed573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061115a9190611c33565b5f5f82156114245750600160f81b611427565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f516020611c5f5f395f51905f52916001600160a01b031690631391547f906064015b6020604051808303815f875af11580156114b3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114d79190611c33565b9695505050505050565b5f805f516020611c5f5f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af115801561154a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061156e9190611c33565b95945050505050565b5f5f821561158a5750600160f81b61158d565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f516020611c5f5f395f51905f52916001600160a01b03169063117b2f3890606401611497565b5f5f82156116145750600160f81b611617565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051630afe14ad60e31b815260048101879052602481018690526001600160f81b0319831660448201525f516020611c5f5f395f51905f52916001600160a01b0316906357f0a56890606401611497565b5f6110d38261169a575f61169d565b60015b60ff165f61136f565b5f5f82156116b95750600160f81b6116bc565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163d99882d560e01b815260048101879052602481018690526001600160f81b0319831660448201525f516020611c5f5f395f51905f52916001600160a01b03169063d99882d590606401611497565b6001600160a01b0381168114611744575f5ffd5b50565b5f60208284031215611757575f5ffd5b8135610dba81611730565b5f5f60408385031215611773575f5ffd5b823561177e81611730565b946020939093013593505050565b5f5f83601f84011261179c575f5ffd5b50813567ffffffffffffffff8111156117b3575f5ffd5b6020830191508360208285010111156117ca575f5ffd5b9250929050565b5f5f5f5f5f5f5f5f60c0898b0312156117e8575f5ffd5b88359750602089013596506040890135955060608901359450608089013567ffffffffffffffff81111561181a575f5ffd5b6118268b828c0161178c565b90955093505060a089013567ffffffffffffffff811115611845575f5ffd5b6118518b828c0161178c565b999c989b5096995094979396929594505050565b5f60208284031215611875575f5ffd5b5035919050565b5f5f5f6040848603121561188e575f5ffd5b83359250602084013567ffffffffffffffff8111156118ab575f5ffd5b6118b78682870161178c565b9497909650939450505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610dba60208301846118c4565b5f5f5f5f60608587031215611917575f5ffd5b8435935060208501359250604085013567ffffffffffffffff81111561193b575f5ffd5b6119478782880161178c565b95989497509550505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156110d3576110d3611953565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806119a257607f821691505b6020821081036119c057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156103f857805f5260205f20601f840160051c810160208510156119eb5750805b601f840160051c820191505b81811015611a0a575f81556001016119f7565b5050505050565b67ffffffffffffffff831115611a2957611a2961197a565b611a3d83611a37835461198e565b836119c6565b5f601f841160018114611a6e575f8515611a575750838201355b5f19600387901b1c1916600186901b178355611a0a565b5f83815260208120601f198716915b82811015611a9d5786850135825560209485019460019092019101611a7d565b5086821015611ab9575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b602081525f5f8354611b0a8161198e565b806020860152600182165f8114611b285760018114611b4457611b75565b60ff1983166040870152604082151560051b8701019350611b75565b865f5260205f205f5b83811015611b6c57815488820160400152600190910190602001611b4d565b87016040019450505b509195945050505050565b5f82611b9a57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b808201808211156110d3576110d3611953565b80820281158282048414176110d3576110d3611953565b60548110611bf957634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f611c2460808301856118c4565b905061156e6060830184611bdd565b5f60208284031215611c43575f5ffd5b5051919050565b82815260408101610dba6020830184611bdd56fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a164736f6c634300081b000a";

type EncryptEvaluationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EncryptEvaluationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EncryptEvaluation__factory extends ContractFactory {
  constructor(...args: EncryptEvaluationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _queryFeeWei: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_queryFeeWei, overrides || {});
  }
  override deploy(
    _queryFeeWei: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_queryFeeWei, overrides || {}) as Promise<
      EncryptEvaluation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EncryptEvaluation__factory {
    return super.connect(runner) as EncryptEvaluation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EncryptEvaluationInterface {
    return new Interface(_abi) as EncryptEvaluationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EncryptEvaluation {
    return new Contract(address, _abi, runner) as unknown as EncryptEvaluation;
  }
}
